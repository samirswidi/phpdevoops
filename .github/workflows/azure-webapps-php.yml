name: Build, test, and deploy PHP app to Azure Web App with Docker

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'webapp45693926'
  DOCKER_IMAGE: 'samirswidi/phpdevoops'
  PHP_VERSION: '8.x'

permissions:
  contents: read

jobs:
sonar-test:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.PHP_VERSION }}
        extensions: mbstring, intl, pdo, mysqli
        coverage: none

    - name: Install dependencies
      run: composer install --no-progress

    - name: Install SonarQube Scanner
      run: |
        curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner-cli.zip -d $HOME/
        echo "$HOME/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

    - name: Run SonarQube Scanner
      env:
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_URL }}
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=php_project \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN

  docker-build-push:
    runs-on: ubuntu-latest
    needs: sonar-test

    steps:
      # Configuration de Docker pour la construction multi-plateforme
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Connexion à DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Récupération du code source
      - name: Checkout repository
        uses: actions/checkout@v4

      # Construction et publication de l'image Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:1.0.${{ github.run_number }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: docker-build-push
    environment:
      name: 'Development'

    steps:
      # Déploiement de l'image Docker sur Azure Web App
      - name: Deploy Docker image to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.DOCKER_IMAGE }}:1.0.${{ github.run_number }}
